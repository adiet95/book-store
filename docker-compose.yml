  version: '1'
  services:
    auth_service:
      container_name: auth_service
      image: auth_service:1.0.0
      build:
        context: auth-service
        dockerfile: Dockerfile
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - DATABASE_HOST=${DB_HOST}
        - DATABASE_PORT=${DB_PORT}
        - JWT_KEYS=${JWT_KEYS}
      tty: true
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - postgresdb
      ports:
        - "8081:8085"
    book_service:
      container_name: book_service
      image: book_service:1.0.0
      build:
        context: book-service
        dockerfile: Dockerfile
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - DATABASE_HOST=${DB_HOST}
        - DATABASE_PORT=${DB_PORT}
        - GRPC_ADDRESS=${GRPC_ADDRESS}
      tty: true
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - postgresdb
      ports:
        - "8082:8086"
    author_service:
      container_name: author_service
      image: author_service:1.0.0
      build:
        context: author-service
        dockerfile: Dockerfile
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - DATABASE_HOST=${DB_HOST}
        - DATABASE_PORT=${DB_PORT}
        - GRPC_ADDRESS=${GRPC_ADDRESS}
      tty: true
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - postgresdb
      ports:
        - "8083:8087"
    category_service:
      container_name: category_service
      image: category_service:1.0.0
      build:
        context: category-service
        dockerfile: Dockerfile
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - DATABASE_HOST=${DB_HOST}
        - DATABASE_PORT=${DB_PORT}
        - GRPC_ADDRESS=${GRPC_ADDRESS}
      tty: true
      restart: on-failure
      volumes:
        - .:/app
      depends_on:
        - postgresdb
      ports:
        - "8084:8088"
    postgresdb:
      image: postgres:latest
      container_name: postgres_container
      environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASS}
        - POSTGRES_DB=${DB_NAME}
        - DATABASE_HOST=${DB_HOST}
      ports:
        - '5432:5432'
      volumes:
        - ./pg_data:/var/lib/postgresql/data
    redis:
      image: redis:latest
      restart: always
      ports:
        - "6379:6379"
      volumes:
        - /path/to/local/d–∞ta:/root/redis
        - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
      environment:
        - REDIS_PASSWORD=
        - REDIS_PORT=6379
        - REDIS_DATABASES=4
  volumes:
    pgdata: {}